!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self)["@wt/lib-taskqueue"]=t()}(this,(function(){"use strict";const e=require("pino"),t=require("numeral"),r=e({level:process.env.LOGGER||"info",prettyPrint:{levelFirst:!0,translateTime:"SYS:yyyy-mm-dd HH:MM:ss.l",crlf:!0},prettifier:require("pino-pretty")});function n(e,t,r){return o(e*(r-t)/t)}function o(e){let r=(e=Number.parseInt(e))%1e3,n=(e=Number.parseInt(e/1e3))%60,o=(e=Number.parseInt(e/60))%60,i=Number.parseInt(e/60);return`${t(i).format("00")}:${t(o).format("00")}:${t(n).format("00")}.${t(r).format("000")}`}return function(e,t=20,i="默认任务队列"){let u=[],f=0,a=[],l=Date.now(),s=0;for(let c=0;c<t;c++)u[c]=new Promise(async(t,u)=>{try{for(;e&&f<e.length;){let t=f,u=e[t].args;f++,r.debug(`【${i}】${c} - 执行第${f}个任务，参数【%o】`,u);try{a[t]=await e[t].caller(...u)}catch(e){r.error(`【${i}】${c} - 执行错误，%o`,e)}s++;let $=Date.now()-l,m=n($,s,e.length);r.debug(`【${i}】${c} - 完成第${t+1}个任务！`),r.info(`【${i}】 已经完成${s}/${e.length}个任务，已经使用时间：${o($)}, 预计还需要时间：${m}`)}t()}catch(e){u(e)}});return u}}));
//# sourceMappingURL=taskqueue.js.map
