!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self)["@wt/lib-taskqueue"]=t()}(this,(function(){"use strict";const e=require("pino"),t=require("numeral"),r=e({level:process.env.LOGGER||"info",prettyPrint:{levelFirst:!0,translateTime:"SYS:yyyy-mm-dd HH:MM:ss.l",crlf:!0},prettifier:require("pino-pretty")});function n(e,r,n){let o=e*(n-r)/r;o=Number.parseInt(o);let i=o%1e3;o=Number.parseInt(o/1e3);let l=o%60;o=Number.parseInt(o/60);let u=o%60,f=Number.parseInt(o/60);return`${t(f).format("00")}:${t(u).format("00")}:${t(l).format("00")}.${t(i).format("000")}`}return function(e,t=20,o="默认任务队列"){let i=[],l=0,u=[],f=Date.now(),a=0;for(let s=0;s<t;s++)i[s]=new Promise(async(t,i)=>{try{for(;e&&l<e.length;){let t=l,i=e[t].args;l++,r.debug(`【${o}】${s} - 执行第${l}个任务，参数【%o】`,i);try{u[t]=await e[t].caller(...i)}catch(e){r.error(`【${o}】${s} - 执行错误，%o`,e)}a++;let c=n(Date.now()-f,a,e.length);r.debug(`【${o}】${s} - 完成第${t+1}个任务！`),r.info(`【${o}】 已经完成${a}/${e.length}个任务，预计还需要时间：${c}`)}t()}catch(e){i(e)}});return i}}));
//# sourceMappingURL=taskqueue.js.map
