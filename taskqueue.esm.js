const e=require("pino"),r=require("numeral"),t=e({prettyPrint:{levelFirst:!0,translateTime:"SYS:standard",crlf:!0},prettifier:require("pino-pretty")});function n(e,t,n){let a=e*(n-t)/t;a=Number.parseInt(a);let l=a%1e3;a=Number.parseInt(a/1e3);let o=a%60;a=Number.parseInt(a/60);let $=a%60,i=Number.parseInt(a/24);return`${r(i).format("00")}:${r($).format("00")}:${r(o).format("00")}.${r(l).format("000")}`}process.env.LOGGER&&(t.level=process.env.LOGGER);export default function(e,r=20,a="默认任务队列"){let l=[],o=0,$=[],i=Date.now(),s=0;for(let u=0;u<r;u++)l[u]=new Promise(async(r,l)=>{try{for(;e&&o<e.length;){let r=o,l=e[r].args;o++,t.debug(`【${a}】${u} - 执行第${o}个任务，参数【%o】`,l);try{$[r]=await e[r].caller(...l)}catch(e){t.error(`【${a}】${u} - 执行错误，%o`,e)}s++;let c=n(Date.now()-i,s,e.length);t.debug(`【${a}】${u} - 完成第${r+1}个任务！`),t.info(`【${a}】 已经完成${s}/${e.length}个任务，预计还需要时间：${c}`)}r()}catch(e){l(e)}});return l}
