const e=require("pino"),r=require("numeral"),t=e({level:process.env.LOGGER||"info",prettyPrint:{levelFirst:!0,translateTime:"SYS:yyyy-mm-dd HH:MM:ss.l",crlf:!0},prettifier:require("pino-pretty")});function n(e,r,t){return o(e*(t-r)/r)}function o(e){let t=(e=Number.parseInt(e))%1e3,n=(e=Number.parseInt(e/1e3))%60,o=(e=Number.parseInt(e/60))%60,a=Number.parseInt(e/60);return`${r(a).format("00")}:${r(o).format("00")}:${r(n).format("00")}.${r(t).format("000")}`}export default function(e,r=20,a="默认任务队列"){let l=[],i=0,s=[],u=Date.now(),$=0;for(let f=0;f<r;f++)l[f]=new Promise(async(r,l)=>{try{for(;e&&i<e.length;){let r=i,l=e[r].args;i++,t.debug(`【${a}】${f} - 执行第${i}个任务，参数【%o】`,l);try{s[r]=await e[r].caller(...l)}catch(e){t.error(`【${a}】${f} - 执行错误，%o`,e)}$++;let m=Date.now()-u,c=n(m,$,e.length);t.debug(`【${a}】${f} - 完成第${r+1}个任务！`),t.info(`【${a}】 已经完成${$}/${e.length}个任务，已经使用时间：${o(m)}, 预计还需要时间：${c}`),t.info("内存使用：%o",process.memoryUsage())}r()}catch(e){l(e)}});return l}
