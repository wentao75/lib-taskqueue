const e=require("pino"),r=require("numeral"),t=e({level:process.env.LOGGER||"info",prettyPrint:{levelFirst:!0,translateTime:"SYS:yyyy-mm-dd HH:MM:ss.l",crlf:!0},prettifier:require("pino-pretty")});function n(e,t,n){let l=e*(n-t)/t;l=Number.parseInt(l);let a=l%1e3;l=Number.parseInt(l/1e3);let o=l%60;l=Number.parseInt(l/60);let i=l%60,$=Number.parseInt(l/60);return`${r($).format("00")}:${r(i).format("00")}:${r(o).format("00")}.${r(a).format("000")}`}export default function(e,r=20,l="默认任务队列"){let a=[],o=0,i=[],$=Date.now(),u=0;for(let s=0;s<r;s++)a[s]=new Promise(async(r,a)=>{try{for(;e&&o<e.length;){let r=o,a=e[r].args;o++,t.debug(`【${l}】${s} - 执行第${o}个任务，参数【%o】`,a);try{i[r]=await e[r].caller(...a)}catch(e){t.error(`【${l}】${s} - 执行错误，%o`,e)}u++;let f=n(Date.now()-$,u,e.length);t.debug(`【${l}】${s} - 完成第${r+1}个任务！`),t.info(`【${l}】 已经完成${u}/${e.length}个任务，预计还需要时间：${f}`)}r()}catch(e){a(e)}});return a}
